{"version":3,"sources":["Api.js"],"names":["Api","express","middleware","routes","use","json","urlencoded","extended","req","res","message"],"mappings":";;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,G;AAGnB,iBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,wBAAf;AACA,SAAKC,UAAL;AACA,SAAKC,MAAL;AACD;;;;iCAEkB;AACjB,WAAKF,OAAL,CAAaG,GAAb,CAAiB,sBAAO,KAAP,CAAjB;AACA,WAAKH,OAAL,CAAaG,GAAb,CAAiB,qBAAWC,IAAX,EAAjB;AACA,WAAKJ,OAAL,CAAaG,GAAb,CAAiB,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAjB;AACD;;;6BAEc;AACb,WAAKN,OAAL,CAAaG,GAAb,CAAiB,UAACI,GAAD,EAAgBC,GAAhB,EAAmC;AAClDA,YAAIJ,IAAJ,CAAS,EAACK,SAAS,aAAV,EAAT;AACD,OAFD;AAGD;;;;;;kBAnBkBV,G","file":"Api.js","sourcesContent":["// @flow\n\nimport express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\n\nexport default class Api {\n  express: express$Application;\n\n  constructor() {\n    this.express = express();\n    this.middleware();\n    this.routes();\n  }\n\n  middleware(): void {\n    this.express.use(morgan('dev'));\n    this.express.use(bodyParser.json());\n    this.express.use(bodyParser.urlencoded({extended: false}));\n  }\n\n  routes(): void {\n    this.express.use((req: $Request, res: $Response) => {\n      res.json({message: 'Hello Flow!'});\n    })\n  }\n}"]}